on:
    workflow_dispatch:
    release:
        types: [published]
    push:
        branches:
            - main
            - master
        paths:
            - "**/*.go"
            - "go.mod"
            - "go.sum"
            - ".github/workflows/*.yml"
    pull_request:
        types: [opened, synchronize, reopened]
        paths:
            - "**/*.go"
            - "go.mod"
            - "go.sum"
            - ".github/workflows/*.yml"

name: Build Release
jobs:
    Build:
        permissions:
            contents: write
        strategy:
            matrix:
                # Include amd64 on all platforms.
                goos: [windows, freebsd, openbsd, linux, dragonfly, darwin]
                goarch: [amd64, 386]
                exclude:
                    # Exclude i386 on darwin and dragonfly.
                    - goarch: 386
                      goos: dragonfly
                    - goarch: 386
                      goos: darwin
                include:
                    # BEIGIN MacOS ARM64
                    - goos: darwin
                      goarch: arm64
                    # END MacOS ARM64
                    # BEGIN Linux ARM 5 6 7
                    - goos: linux
                      goarch: arm
                      goarm: 7
                    - goos: linux
                      goarch: arm
                      goarm: 6
                    - goos: linux
                      goarch: arm
                      goarm: 5
                    # END Linux ARM 5 6 7
                    # BEGIN Android ARM 8
                    - goos: android
                      goarch: arm64
                    # END Android ARM 8
                    # Windows ARM
                    - goos: windows
                      goarch: arm64
                    - goos: windows
                      goarch: arm
                      goarm: 7
                    # BEGIN Other architectures
                    # BEGIN riscv64 & ARM64
                    - goos: linux
                      goarch: arm64
                    - goos: linux
                      goarch: riscv64
                    # END riscv64 & ARM64
                    # BEGIN MIPS
                    - goos: linux
                      goarch: mips64
                    - goos: linux
                      goarch: mips64le
                    - goos: linux
                      goarch: mipsle
                    - goos: linux
                      goarch: mips
                    # END MIPS
                    # BEGIN PPC
                    - goos: linux
                      goarch: ppc64
                    - goos: linux
                      goarch: ppc64le
                    # END PPC
                    # BEGIN FreeBSD ARM
                    - goos: freebsd
                      goarch: arm64
                    - goos: freebsd
                      goarch: arm
                      goarm: 7
                    # END FreeBSD ARM
                    # BEGIN S390X
                    - goos: linux
                      goarch: s390x
                    # END S390X
                    # END Other architectures
                    # BEGIN OPENBSD ARM
                    - goos: openbsd
                      goarch: arm64
                    - goos: openbsd
                      goarch: arm
                      goarm: 7
                    # END OPENBSD ARM
            fail-fast: false

        runs-on: ubuntu-latest
        env:
            GOOS: ${{ matrix.goos }}
            GOARCH: ${{ matrix.goarch }}
            GOARM: ${{ matrix.goarm }}
            CGO_ENABLED: 0
        steps:
            - name: Checkout codebase
              uses: actions/checkout@v3

            - name: Show workflow information
              run: |
                  export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
                  echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
                  echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.23.2"
                  check-latest: true

            - name: Get project dependencies
              run: go mod download

            - name: Build
              run: |
                  mkdir -p build_assets
                  go build -v -o build_assets/ORMEncrption -trimpath -ldflags "-s -w -buildid=" ./

            #   - name: Upload binaries to release
            #     uses: svenstaro/upload-release-action@v2
            #     if: github.event_name == 'release'
            #     with:
            #       repo_token: ${{ secrets.GT_Token }}
            #       file: ./ORMEncrption-${{ env.ASSET_NAME }}.zip*
            #       tag: ${{ github.ref }}
            #       file_glob: true
            - uses: christopherhx/gitea-upload-artifact@v4
              with:
                  name: ORMEncrption-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm }}
                  path: build_assets/ORMEncrption
